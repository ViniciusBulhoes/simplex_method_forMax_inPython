# -*- coding: utf-8 -*-
"""simplex.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Pv3ybq0IpnrG6Ge_3Bv-yC8ghDXjQRyo
"""

import numpy as np
import csv

m = 1000
'''
a = np.array([[-1,17,20,13,12,15,21,26,25,15,14,15,17,0],
              [0,1,1,1,1,0,0,0,0,0,0,0,0,0],
              [0,0,0,0,0,1,1,1,1,0,0,0,0,0],
              [0,0,0,0,0,0,0,0,0,1,1,1,1,0],
              [0,1,0,0,0,1,0,0,0,1,0,0,0,0],
              [0,0,1,0,0,0,1,0,0,0,1,0,0,0],
              [0,0,0,1,0,0,0,1,0,0,0,1,0,0],
              [0,0,0,0,1,0,0,0,1,0,0,0,1,0]], dtype=float)

a = np.array([[1,20,15,10,12,8,16,0],
              [0,1,1,1,0,0,0,50],
              [0,0,0,0,1,1,1,70],
              [0,1,0,0,1,0,0,20],
              [0,0,1,0,0,1,0,40]], dtype=float)
base = [1,2,3,4,5,6]
'''
'''
a = np.array([[1.0, 0.0, 0.0, -13.0, -1.0, 0.0, 0.0, -1890.0],
              [0.0, 0.0, 1.0, 1.0, -1.0, 0.0, 0.0, 30.0],
              [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 60.0],
              [0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 20.0],
              [0.0, 0.0, 0.0, -1.0, 1.0, 1.0, 0.0, 10.0]])
base = [1,2,5,6]
'''
a = np.array([[1, -7, 1, 0, 0, 0, 4, -7, 0, 0, 3, 0, 10, -3800],
              [0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50],
              [0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 60],
              [0, -1, 0, 0, 0, 1, 1, -1, 0, 0, -1, 0, 0, 0],
              [0, 1, 1, 0, 0, 0, -1, 1, 1, 0, 0, 0, -1, 10],
              [0, -1, -1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 60],
              [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 80]], dtype=float)

base = [3,4,5,8,9,11]
coefs_elim = []
for i in range(len(a)):
  coefs_elim.append(0.0)

f = open("simplex_sol_p2_q1.csv", 'w')
f.write("Adotando M="+str(m)+'\n')
for i in range(len(a[0])-1):
  if i == 0:
    f.write('base,z,')
  elif i<len(a[0])-2:
    f.write('x'+str(i)+',')
  else:
    f.write('x'+str(i)+',b\n')

for i in range(len(a)):
  for j in range(len(a[0])):
    if i == 0:
      if j == 0:
        f.write('z,'+str(a[i][j])+',')
      elif j<len(a[0])-1:
        f.write(str(a[i][j])+',')
      else:
        f.write(str(a[i][j])+'\n')
    else:
      if j == 0:
        f.write('x'+str(base[i-1])+','+str(a[i][j])+',')
      elif j<len(a[0])-1:
        f.write(str(a[i][j])+',')
      else:
        f.write(str(a[i][j])+'\n')

simplex_cont = True
while simplex_cont:
  trono_pivo_col = 0
  trono_rel_cost = 100000000
  index_pivo_col = 0
  index_pivo_row = 0
  simplex_cont = False

  #definir qual termo deve entrar para a base
  for i in range(1,len(a[0])-1):
    if a[0][i]<0 and a[0][i]<trono_pivo_col:
      trono_pivo_col = a[0][i]
      index_pivo_col = i
      simplex_cont = True #foi achado uma variavel par entrar entao continua o programa

  if simplex_cont:
    for i in range(1, len(a)):
      if a[i][index_pivo_col]>0 and a[i][-1]>=0:
        if float(a[i][-1]/a[i][index_pivo_col])<float(trono_rel_cost):
          trono_rel_cost = float(a[i][-1]/a[i][index_pivo_col])
          index_pivo_row = i

    saiu_base = base[index_pivo_row-1]
    base[index_pivo_row-1] = index_pivo_col

    if index_pivo_row == 0:
      break #nao foi achado uma variavel para sair da base portanto eh uma solucao degenerada

    pivo_val = a[index_pivo_row][index_pivo_col]
    a[index_pivo_row] = a[index_pivo_row]/pivo_val
    for i in range(len(a)):
      elim_coef = a[i][index_pivo_col]
      coefs_elim[i] = elim_coef
      if i != index_pivo_row:
        for j in range(len(a[0])):
          a[i][j] = a[i][j] - (a[index_pivo_row][j]*elim_coef)

    print("Mais uma iteracao")

    #print(a)

  f.write('variavel para entrar na base: x'+str(index_pivo_col)+',\n')
  for i in range(len(a)):
    if i!= index_pivo_row:
      f.write('L'+str(i)+'=L'+str(i)+'-L'+str(index_pivo_row)+'*'+str(coefs_elim[i])+'\n')
    else:
      f.write('L'+str(i)+'=L'+str(i)+'/'+str(pivo_val)+'\n')

  #escrever a lagenda das variaveis na linha
  for i in range(len(a[0])-1):
    if i == 0:
      f.write('base,z,')
    elif i<len(a[0])-2:
      f.write('x'+str(i)+',')
    else:
      f.write('x'+str(i)+',b\n')

  for i in range(len(a)):
    for j in range(len(a[0])):
      if i == 0:
        if j == 0:
          f.write('z,'+str(a[i][j])+',')
        elif j<len(a[0])-1:
          f.write(str(a[i][j])+',')
        else:
          f.write(str(a[i][j])+'\n')
      else:
        if j == 0:
          f.write('x'+str(base[i-1])+','+str(a[i][j])+',')
        elif j<len(a[0])-1:
          f.write(str(a[i][j])+',')
        else:
          f.write(str(a[i][j])+'\n')

f.close()